// Variables dépendants du thème
$themes: ("dark": (
    bg1: #09080d,
    bg2: #16151a,
    iv: #FFFFFF
  ),
  "light": (
    bg1: #FFFFFF,
    bg2: #FFFFFF,
    iv: #09080d
  ),
  
);

// Couleurs et autres variables communes
$yellow: #b58900;
$orange: #cb4b16;
$red: #dc322f;
$magenta: #d33682;
$violet: #4528DC;
$blue: #268bd2;
$cyan: #2aa198;
$green: #198754;


// génère un nouveau mixin nommé themed a utiliser dans les modules
// L'idée est que toutes les règles css définie à l'interieur
// seront dupliquée en dark et light.
@mixin themed() {
  // pour chaque thème défini dans la variable $themes
  @each $theme, $map in $themes {
    // défini un nouveau matcher .theme--nomdutheme le-matcheur-courant
    :global(.theme--#{$theme}) & {
      // defini une variable globale contenant un hash
      // de toutes les valeurs courantes du theme
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      // execute le contenu original du mixin
      @content;
      // supprime la variable globale
      $theme-map: null !global;
    }
  }
}



// génère un nouveau mixin nommé themed a utiliser dans les styles globaux
// L'idée est que toutes les règles css définie à l'interieur
// seront dupliquée en dark et light.
@mixin gthemed() {

  // pour chaque thème défini dans la variable $themes
  @each $theme,
  $map in $themes {

    // défini un nouveau matcher .theme--nomdutheme le-matcheur-courant
    .theme--#{$theme} & {
      // defini une variable globale contenant un hash
      // de toutes les valeurs courantes du theme
      $theme-map: () !global;

      @each $key,
      $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge($theme-map,
            ($key: $value,
            )) !global;
      }

      // execute le contenu original du mixin
      @content;
      // supprime la variable globale
      $theme-map: null !global;
    }
  }
}

// Nouvelle fonction t qui va aller lire la valeur
// de la clé dans le hash temporaire défini par le mixin
@function c($key: "base0") {
  @return map-get($theme-map, $key);
}